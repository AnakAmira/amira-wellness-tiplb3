# Kubernetes API version: v1.24+
apiVersion: v1
kind: Secret
metadata:
  name: amira-backend-secrets
  namespace: amira-wellness
  labels:
    app: amira-backend
    component: api
    part-of: amira-wellness
  annotations:
    kubernetes.io/description: "Sensitive configuration for Amira Wellness Backend API Services"
type: Opaque
data:
  # JWT signing key and general application secret for security operations
  SECRET_KEY: YmFzZTY0X2VuY29kZWRfc2VjcmV0X2tleV9mb3Jfand0X3NpZ25pbmdfYW5kX2VuY3J5cHRpb24=
  
  # PostgreSQL database credentials
  POSTGRES_USER: YW1pcmFfYWRtaW4=
  POSTGRES_PASSWORD: c2VjdXJlX2RiX3Bhc3N3b3JkX2Zvcl9wcm9kdWN0aW9uX2Vudmlyb25tZW50
  
  # AWS KMS key ID for envelope encryption of sensitive data
  ENCRYPTION_KEY_ID: YWxpYXMvYW1pcmEtd2VsbG5lc3MtcHJvZHVjdGlvbg==
  
  # AWS credentials for S3 and KMS service access
  AWS_ACCESS_KEY_ID: QUtJQUVYQU1QTEVBQkNERUZHSElK
  AWS_SECRET_ACCESS_KEY: ZXhhbXBsZV9zZWNyZXRfYWNjZXNzX2tleV93aXRoX3N1ZmZpY2llbnRfbGVuZ3Ro
  
  # SMTP credentials for email delivery (SendGrid)
  SMTP_USER: YXBpa2V5
  SMTP_PASSWORD: U0cuZXhhbXBsZV9zZW5kZ3JpZF9hcGlfa2V5X3dpdGhfc3VmZmljaWVudF9sZW5ndGg=
  
  # Redis credentials for cache authentication
  REDIS_PASSWORD: c2VjdXJlX3JlZGlzX3Bhc3N3b3JkX2Zvcl9wcm9kdWN0aW9uX2Vudmlyb25tZW50
  
  # MongoDB credentials for document database
  MONGODB_USER: YW1pcmFfYWRtaW4=
  MONGODB_PASSWORD: c2VjdXJlX21vbmdvZGJfcGFzc3dvcmRfZm9yX3Byb2R1Y3Rpb25fZW52aXJvbm1lbnQ=